{"version":3,"sources":["components/SearchBar/SearchBar.jsx","services/apiService.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/PicturesErrorView/PicturesErrorView.jsx","components/Loader/Loader.jsx","components/Button/Button.jsx","components/PicturesInfo/PicturesInfo.jsx","App.js","index.js"],"names":["SearchBar","onSubmit","useState","input","setInput","className","event","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","API","fetchPictures","query","page","fetch","then","response","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","src","alt","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","onClick","target","ImageGalleryItem","largePicture","showModal","setShowModal","toggleModal","ImageGallery","pictures","map","picture","id","webformatURL","tags","largeImageURL","PicturesErrorView","message","role","PendingView","color","height","width","timeout","Button","PicturesInfo","picturesName","setPictures","setPage","setError","status","setStatus","console","log","apiService","newPictures","total","prevPictures","hits","scrollTo","top","documentElement","scrollHeight","behavior","catch","onLoadMore","prevPage","App","setPicturesName","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cabbeade.chunk.js","sourcesContent":["import './SearchBarStyles.css';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nexport default function SearchBar({ onSubmit }) {\n  const [input, setInput] = useState('')\n \n\n  // static propTypes = {\n  //   onSubmit: PropTypes.func.isRequired,\n  // };\n\n  const handleNameChange = event => {\n    setInput(event.currentTarget.value.toLowerCase());\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (input.trim() === '') {\n      toast.error('Write your request,please');\n      return;\n    }\n    onSubmit(input);\n    setInput('');\n  };\n\n  \n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={input}\n            onChange={handleNameChange}\n          />\n        </form>\n      </header>\n    );  \n}\n","function fetchPictures(query, page) {\n  const BASE_URL = 'https://pixabay.com/api/';\n  const API_KEY = '19104689-9de2c32d2867cfd700a7c6eaf';\n  return fetch(\n    `${BASE_URL}?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Something is wrong, please try again'));\n  });\n}\n\nconst API = {\n  fetchPictures,\n};\n\nexport default API;\n","import './ModalStyles.css';\nimport  { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ src, alt, onClose }) {\n  \n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return (() => {\n     window.removeEventListener('keydown', handleKeyDown) \n    }       \n    )\n  }, )  \n  \n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n    \n\n    return createPortal(\n      <div className=\"Overlay\" onClick={handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n\nModal.propTypes = {\n  alt: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n};\n","import  { useState } from 'react';\nimport Modal from '../Modal/Modal';\nimport './ImageGalleryItemStyles.css';\n\nexport default function ImageGalleryItem({ src, alt, largePicture }) {\n  const [showModal,setShowModal] = useState(false)\n   \n  const toggleModal = () => {\n    setShowModal(showModal =>\n     (!showModal)       \n    );\n  };\n     \n    return (\n      <li className=\"ImageGalleryItem\">\n        <img\n          onClick={toggleModal}\n          src={src}\n          alt={alt}\n          className=\"ImageGalleryItemImage\"\n        />\n        {showModal && (\n          <Modal onClose={toggleModal} src={largePicture} alt={alt} />\n        )}\n      </li>\n    );\n  \n}","import './ImageGallery.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nexport default function ImageGallery({ pictures }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {pictures.map((picture, id) => (\n        <ImageGalleryItem\n          src={picture.webformatURL}\n          alt={picture.tags}\n          largePicture={picture.largeImageURL}\n          key={id}\n        />\n      ))}\n    </ul>\n  );\n}\n","export default function PicturesErrorView({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>{message}</p>\n    </div>\n  );\n}\n","\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport './LoaderStyles.css';\n\nexport default function PendingView() {\n    return (\n      <Loader\n        className=\"Loader\"\n        type=\"Circles\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    );\n  }\n\n\n  \n  \n\n","import './ButtonStyles.css';\nimport PropTypes from 'prop-types';\n\nexport default function Button({onClick}) {\n  const scroll = () => {\n    onClick(); \n   };\n\n      return (\n      <button onClick={scroll} type=\"button\" className=\"Button\">\n        Load more\n      </button>\n    );\n  }\n\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport apiService from '../../services/apiService';\nimport ImageGallery from '../ImageGallery/';\nimport PicturesErrorView from '../PicturesErrorView/PicturesErrorView';\nimport Loader from '../Loader/Loader';\nimport Button from '../Button/Button';\nimport PropTypes from 'prop-types';\n\nexport default function PicturesInfo({ picturesName }) {\n  const [pictures, setPictures] = useState([])\n  const [page, setPage] = useState(1)\n  const [error, setError] = useState(null)\n  const [status,setStatus] = useState('idle')\n\n  useEffect(() => {\n    console.log('First render')\n    if (!picturesName) {\n    return\n    }\n    setStatus('pending')\n  \n  apiService\n    .fetchPictures(picturesName, page)    \n    .then(newPictures => { \n      if (newPictures.total !== 0) {\n        setPictures(prevPictures=> ([...prevPictures, ...newPictures.hits]),\n          setStatus('resolved')\n        );\n        console.log('fetch pictures in Api Service')\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        })\n        return\n      };                       \n          return Promise.reject(new Error('Invalid request'));\n        })                             \n        \n  .catch(error => { \n    setError(error);\n    setStatus('rejected')\n  })\n \n}, [page, picturesName])\n \n\n  const onLoadMore = () => {\n    console.log('добавляем картинок :' , onLoadMore )\n    setPage(prevPage => (\n      prevPage + 1\n    ));\n    console.log('+1 page:', setPage)  \n  };  \n    \n    if (status === 'idle') {\n      return <h1>Введите свой запрос</h1>;\n    }\n    if (status === 'pending') {\n      return <Loader />;\n    }\n    if (status === 'rejected') {\n      return <PicturesErrorView message={error.message} />;\n    }\n    if (status === 'resolved') {\n      return (\n        <>\n          <ImageGallery pictures={pictures} />\n          <Button onClick={onLoadMore} page={page} />\n        </>\n      );\n    }  \n}\nPicturesInfo.propTypes = {\n  message: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\n // componentDidUpdate(prevProps, prevState) {\n  //   const prevRequest = prevProps.picturesName;\n  //   const nextRequest = this.props.picturesName;\n  //   const prevPage = prevState.page;\n  //   const nextPage = this.state.page;\n  //   console.log('componentDidUpdate PicturesInfo Start');\n\n  //   if (prevRequest !== nextRequest) {\n  //     this.setState({ page: 1 });\n  //     console.log('PrevPage !== NextPage', this.setState);\n  //     console.log('page in check');\n  //   }\n\n  //   if (prevRequest !== nextRequest || prevPage !== nextPage) {\n  //     this.setState({ status: 'pending' });\n  //     apiService\n  //       .fetchPictures(nextRequest, nextPage)\n  //       .then(newPictures => {\n  //         if (newPictures.total !== 0) {\n  //           this.setState(prevState => ({\n  //             pictures: [...prevState.pictures, ...newPictures.hits],\n  //             status: 'resolved',\n  //           }));\n  //           window.scrollTo({\n  //             top: document.documentElement.scrollHeight,\n  //             behavior: 'smooth',\n  //           });\n  //           console.log('`Картинки из фетча` : newPictures');\n  //           return;\n  //         }\n  //         return Promise.reject(new Error('Invalid request'));\n  //       })\n  //       .catch(error => this.setState({ error, status: 'rejected' }));\n  //   }\n  // }","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport PicturesInfo from './components/PicturesInfo/PicturesInfo';\n\nexport default function App() {\n  const [picturesName, setPicturesName] = useState('');\n\n  return (\n    <div>\n      <SearchBar onSubmit={setPicturesName} />\n      <PicturesInfo picturesName={picturesName} />\n      <ToastContainer autoClose={2000} />\n    </div>\n  );\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}